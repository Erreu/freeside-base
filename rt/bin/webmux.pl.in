#!@PERL@
# {{{ BEGIN BPS TAGGED BLOCK
# 
# COPYRIGHT:
#  
# This software is Copyright (c) 1996-2004 Best Practical Solutions, LLC 
#                                          <jesse@bestpractical.com>
# 
# (Except where explicitly superseded by other copyright notices)
# 
# 
# LICENSE:
# 
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
# 
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# 
# 
# CONTRIBUTION SUBMISSION POLICY:
# 
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
# 
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
# 
# }}} END BPS TAGGED BLOCK
use strict;

BEGIN {
    $ENV{'PATH'}   = '/bin:/usr/bin';                     # or whatever you need
    $ENV{'CDPATH'} = '' if defined $ENV{'CDPATH'};
    $ENV{'SHELL'}  = '/bin/sh' if defined $ENV{'SHELL'};
    $ENV{'ENV'}    = '' if defined $ENV{'ENV'};
    $ENV{'IFS'}    = '' if defined $ENV{'IFS'};

    eval { require Apache2; require APR::Table; require MasonX::Apache2Handler; 1 } or
    eval { require Apache2; require Apache::compat; 1 } or die $@
      if $ENV{'MOD_PERL'}
      and $ENV{'MOD_PERL'} =~ m{mod_perl/(?:2|1\.9)};

}

use lib ( "@LOCAL_LIB_PATH@", "@RT_LIB_PATH@" );
use RT;

package RT::Mason;

use CGI qw(-private_tempfiles);    #bring this in before mason, to make sure we
                                   #set private_tempfiles

use HTML::Mason;    # brings in subpackages: Parser, Interp, etc.

use vars qw($Nobody $SystemUser $Handler $r);

#This drags in RT's config.pm
RT::LoadConfig();

use Carp;

{

    package HTML::Mason::Commands;
    use vars qw(%session);

    use RT::Tickets;
    use RT::Transactions;
    use RT::Users;
    use RT::CurrentUser;
    use RT::Templates;
    use RT::Queues;
    use RT::ScripActions;
    use RT::ScripConditions;
    use RT::Scrips;
    use RT::Groups;
    use RT::GroupMembers;
    use RT::CustomFields;
    use RT::CustomFieldValues;
    use RT::TicketCustomFieldValues;

    use RT::Interface::Web;
    use MIME::Entity;
    use Text::Wrapper;
    use CGI::Cookie;
    use Time::ParseDate;
    use HTML::Entities;
    use HTML::Scrubber;
    use Text::Quoted;
}

use RT::Interface::Web::Handler;
$Handler = RT::Interface::Web::Handler->new(@RT::MasonParameters);

sub handler {
    ($r) = @_;

    local $SIG{__WARN__};
    local $SIG{__DIE__};

    RT::Init();

    # We don't need to handle non-text, non-xml items
    return -1 if defined( $r->content_type ) && $r->content_type !~ m!(^text/|\bxml\b)!io;

    my %session;
    my $status;
    eval { $status = $Handler->handle_request($r) };
    if ($@) {
        $RT::Logger->crit($@);
    }

    undef(%session);

    if ( $RT::Handle->TransactionDepth ) {
        $RT::Handle->ForceRollback;
        $RT::Logger->crit(
"Transaction not committed. Usually indicates a software fault. Data loss may have occurred"
        );
    }
    return $status;
}

1;
