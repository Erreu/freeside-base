#!/usr/bin/perl


# BEGIN LICENSE BLOCK
# 
# Copyright (c) 1996-2003 Jesse Vincent <jesse@bestpractical.com>
# 
# (Except where explicitly superseded by other copyright notices)
# 
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
# 
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# Unless otherwise specified, all modifications, corrections or
# extensions to this work which alter its source code become the
# property of Best Practical Solutions, LLC when submitted for
# inclusion in the work.
# 
# 
# END LICENSE BLOCK

my $LICENSE  = <<EOL;

Copyright (c) 1996-2003 Jesse Vincent <jesse\@bestpractical.com>

(Except where explicitly superseded by other copyright notices)

This work is made available to you under the terms of Version 2 of
the GNU General Public License. A copy of that license should have
been provided with this software, but in any event can be snarfed
from www.gnu.org.

This work is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

Unless otherwise specified, all modifications, corrections or
extensions to this work which alter its source code become the
property of Best Practical Solutions, LLC when submitted for
inclusion in the work.


EOL

use File::Find;

my @MAKE = qw(Makefile);

File::Find::find({ no_chdir => 1, wanted => \&tag_pm}, 'lib');
File::Find::find({ no_chdir => 1, wanted => \&tag_mason}, 'html');
File::Find::find({ no_chdir => 1, wanted => \&tag_script}, 'sbin');
File::Find::find({ no_chdir => 1, wanted => \&tag_script}, 'bin');
tag_makefile ('Makefile.in');
tag_makefile ('README');


sub tag_mason {
        my $pm = $_;
        next unless (-f $pm);
        next if ($pm =~ /images/);
        open(FILE,"<$pm") || die "Failed to open $pm";
        my $file = (join "", <FILE>); 
        close (FILE);
        my $pmlic = $LICENSE;
        $pmlic =~ s/^/%# /mg;


        print "$pm - ";
        if ($file =~ /^%# BEGIN LICENSE BLOCK/ms) {
                print "has license section";
             $file =~ s/^%# BEGIN LICENSE BLOCK(.*?)%# END LICENSE BLOCK/%# BEGIN LICENSE BLOCK\n$pmlic%# END LICENSE BLOCK/ms;
             

        } else {
                print "no license section";
             $file ="%# BEGIN LICENSE BLOCK\n$pmlic%# END LICENSE BLOCK\n". $file;
        }
        $file =~ s/%# END LICENSE BLOCK(\n+)/%# END LICENSE BLOCK\n/mg;
        print "\n";
        
        


        open (FILE, ">$pm") || die "couldn't write new file";
        print FILE $file;
        close FILE;

}


sub tag_makefile {
        my $pm = shift;
        open(FILE,"<$pm") || die "Failed to open $pm";
        my $file = (join "", <FILE>); 
        close (FILE);
        my $pmlic = $LICENSE;
        $pmlic =~ s/^/# /mg;


        print "$pm - ";
        if ($file =~ /^# BEGIN LICENSE BLOCK/ms) {
                print "has license section";
             $file =~ s/^# BEGIN LICENSE BLOCK(.*?)# END LICENSE BLOCK/# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK/ms;
             

        } else {
                print "no license section";
             $file ="# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK\n". $file;
        }
        $file =~ s/# END LICENSE BLOCK(\n+)/# END LICENSE BLOCK\n/mg;
        print "\n";
        
        


        open (FILE, ">$pm") || die "couldn't write new file";
        print FILE $file;
        close FILE;

}


sub tag_pm {
        my $pm = $_;
        next unless $pm =~ /\.pm\z/s;
        open(FILE,"<$pm") || die "Failed to open $pm";
        my $file = (join "", <FILE>); 
        close (FILE);
        my $pmlic = $LICENSE;
        $pmlic =~ s/^/# /mg;


        print "$pm - ";
        if ($file =~ /^# BEGIN LICENSE BLOCK/ms) {
                print "has license section";
             $file =~ s/^# BEGIN LICENSE BLOCK(.*?)# END LICENSE BLOCK/# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK/ms;
             

        } else {
                print "no license section";
             $file ="# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK\n". $file;
        }
        $file =~ s/# END LICENSE BLOCK(\n+)/# END LICENSE BLOCK\n/mg;
        print "\n";
        
        


        open (FILE, ">$pm") || die "couldn't write new file $pm";
        print FILE $file;
        close FILE;

}


sub tag_script {
        my $pm = $_;
        return unless (-f $pm);
        open(FILE,"<$pm") || die "Failed to open $pm";
        my $file = (join "", <FILE>); 
        close (FILE);
        my $pmlic = $LICENSE;
        $pmlic =~ s/^/# /msg;

        print "$pm - ";
        if ($file =~ /^# BEGIN LICENSE BLOCK/ms) {
                print "has license section";
             $file =~ s/^# BEGIN LICENSE BLOCK(.*?)# END LICENSE BLOCK/# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK/ms;
             

        } else {
                print "no license section";
                if ($file =~ /^(#!.*?)\n/) {

            my  $lic ="# BEGIN LICENSE BLOCK\n$pmlic# END LICENSE BLOCK\n";
                $file =~ s/^(#!.*?)\n/$1\n$lic/; 

                } 
        }
        $file =~ s/# END LICENSE BLOCK(\n+)/# END LICENSE BLOCK\n\n/mg;
        print "\n";
        

        open (FILE, ">$pm") || die "couldn't write new file";
        print FILE $file;
        close FILE;

}

