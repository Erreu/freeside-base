%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2003 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<BR>
<%$msg%><br>

<&|/l&>Add new watchers</&>:<br>

<table>
% if ($Users and $Users->Count) {
<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Username</&>
</td></tr>
% while (my $u = $Users->Next ) {
<tr><td><&/Elements/SelectWatcherType, Name => "Ticket-AddWatcher-Principal-".$u->PrincipalId &></td><td><%$u->Name%> (<%$u->RealName%>)</td></tr>
% }
% }

% if ($Groups and $Groups->Count) {
<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Group</&>
</td></tr>
% while (my $g = $Groups->Next ) {
<tr><td><&/Elements/SelectWatcherType, Name => "Ticket-AddWatcher-Principal-".$g->PrincipalId, Scope => 'queue' &></td><td><%$g->Name%> (<%$g->Description%>)</td></tr>
% }
% }

<tr><td>
<&|/l&>Type</&>
</td><td>
<&|/l&>Email</&>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail1" &>
</td><td>
<input name="WatcherAddressEmail1" size=15>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail2" &> 
</td><td>
<input name="WatcherAddressEmail2" size=15>
</td></tr>
<tr><td>
<&/Elements/SelectWatcherType, Name => "WatcherTypeEmail3" &>
</td><td>
<input name="WatcherAddressEmail3" size=15>
</td></tr>
</table>

<%INIT>
my ($msg, $Users, $Groups);

if ($UserString) {
    $Users = RT::Users->new($session{'CurrentUser'});
    $Users->Limit(FIELD => $UserField, VALUE => $UserString, OPERATOR => $UserOp);
     }

if ($GroupString) {
    $Groups = RT::Groups->new($session{'CurrentUser'});
    $Groups->Limit(FIELD => 'Domain', OPERATOR => '=', VALUE => 'UserDefined');
    $Groups->Limit(FIELD => $GroupField, VALUE => $GroupString, OPERATOR => $GroupOp);
     }

</%INIT>

<%ARGS>
$UserField => 'Name'
$UserOp => '='
$UserString => undef
$GroupField => 'Name'
$GroupOp => '='
$GroupString => undef
</%ARGS>
