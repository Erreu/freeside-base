#!/bin/sh

# if /usr/local/sbin/portupgrade does not exist
# then install portupgrade
( cd /usr/ports/sysutils/portupgrade
  #??? setenv WITH_OPENSSL_PORT "yes"
  make install clean
)

# ???
##rehash
#pkgdb -u

# if cvsup is not installed, then
portinstall -PR cvsup-without-gui

#cp /usr/share/examples/cvsup/ports-supfile /root
#perl -pi -e 's/CHANGE_THIS/cvsup13/;' /root/ports-supfile
#cvsup /root/ports-supfile

# choose the fastest cvsup server, then cvsup update
/usr/local/bin/cvsup -g -L 2 -h cvsup2.freebsd.org /usr/share/examples/cvsup/ports-supfile

# Update the ports database
#/usr/local/sbin/portsdb -Uu
portsdb -Uu

portinstall -PR portupgrade

portinstall -PR lang/perl5.8
# if FreeBSD 4.x, then
/usr/local/bin/use.perl port

#portupgrade -f `(pkg_info -R perl-5\* |tail +4; \
#        find /usr/local/lib/perl5/site_perl/5.[68].[1245] -type f -print0 \
#        | xargs -0 pkg_which -fv | sed -e '/: ?/d' -e 's/.*: //')|sort -u`


for port in `grep -v '^ *#' ports`; do
  portinstall -PR $port
done

for a in JavaScript::RPC::Server::CGI Chart::LinesPoints Frontier::RPC2; do perl -MCPAN -e"install $a"; done

su -l pgsql -c initdb
echo '
postgresql_enable="YES"
postgresql_data="/usr/local/pgsql/data"
postgresql_flags="-w -s -m fast"
' >>/etc/rc.conf

/usr/local/etc/rc.d/010.pgsql.sh start

pw user add freeside -m

su -l pgsql -c 'createuser -P freeside'

su -l freeside -c 'createdb freeside'

#?
cd ../..
make install-perl-modules
make create-config
freeside-adduser -c -h /usr/local/etc/freeside/htpasswd ivan
su freeside -c 'freeside-setup ivan'
su freeside -c '/home/ivan/freeside/bin/populate-msgcat ivan'

#edit apache config, etc.

echo '
apache_enable="YES"
apache_flags="-DSSL"
' >>/etc/rc.conf

make deploy

