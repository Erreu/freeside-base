#!/usr/bin/perl

foreach $file ( split(/\n/, `find . -depth -print`) ) {
  next unless $file =~ /(cgi|html)$/;
  open(F,$file) or die "can't open $file for reading: $!";
  @file = <F>;
  #print "$file ". scalar(@file). "\n";
  close $file;
  $newline = ''; #avoid prepending extraneous newlines
  $all = join('',@file);

  $w = '';

  $mode = 'html';
  while ( length($all) ) {

    if ( $mode eq 'html' ) {

      if ( $all =~ /^(.+?)(<%=?.*)$/s && $1 !~ /<%/s ) {
        $w .= $1;
        $all = $2;
        next;
      } elsif ( $all =~ /^<%=(.*)$/s ) {
        $w .= '<%';
        $all = $1;
        $mode = 'perlv';
        #die;
        next;
      } elsif ( $all =~ /^<%(.*)$/s ) {
        $w .= $newline; $newline = "\n";
        $all = $1;
        $mode = 'perlc';

        #avoid newline prepend fix from borking indented first <%
        $w =~ s/\n\s+\z/\n/;
        $w .= "\n" if $w =~ /.+\z/;

        next;
      } elsif ( $all !~ /<%/s ) {
        $w .= $all;
        last;
      } else {
        warn length($all); die;
      }
      die;

    } elsif ( $mode eq 'perlv' ) {

      if ( $all =~ /^(.*?%>)(.*)$/s ) {
        $w .= $1;
        $all=$2;
        $mode = 'html';
        next;
      }
      die 'unterminated <%= ???';

    } elsif ( $mode eq 'perlc' ) {

      if ( $all =~ /^([^\n]*?)%>(.*)$/s ) {
        $w .= "%$1\n";
        $all=$2;
        $mode='html';
        next;
      }
      if ( $all =~ /^([^\n]*)\n(.*)$/s ) {
        $w .= "%$1\n";
        $all=$2;
        next;
      }

    } else { die };

  }

  system("chmod u+w $file");
  select W; $| = 1; select STDOUT;
  open(W,">$file") or die "can't open $file for writing: $!";
  print W $w;
  close W;
}
