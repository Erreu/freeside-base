CREATE TABLE cust_pay_refund (
    payrefundnum serial NOT NULL,
    paynum int NOT NULL,
    refundnum int NOT NULL,
    _date int NOT NULL,
    amount decimal(10,2) NOT NULL,
    PRIMARY KEY (payrefundnum)
);
CREATE INDEX cust_pay_refund1 ON cust_pay_refund(paynum);
CREATE INDEX cust_pay_refund2 ON cust_pay_refund(refundnum);

CREATE TABLE cust_pay_void (
  paynum int NOT NULL,
  custnum int NOT NULL,
  paid decimal(10,2) NOT NULL,
  _date int,
  payby char(4) NOT NULL,
  payinfo varchar(80),
  paybatch varchar(80),
  closed char(1),
  void_date int,
  reason varchar(80),
  otaker varchar(32) NOT NULL,
  PRIMARY KEY (paynum)
);
CREATE INDEX cust_pay_void1 ON cust_pay_void(custnum);

alter table svc_external alter column id drop not null;
alter table h_svc_external alter column id drop not null;

INSERT INTO msgcat ( msgnum, msgcode, locale, msg ) VALUES ( 20, 'svc_external-id', 'en_US', 'External ID' );
INSERT INTO msgcat ( msgnum, msgcode, locale, msg ) VALUES ( 21, 'svc_external-title', 'en_US', 'Title' );

CREATE TABLE part_pkg_option (
  optionnum int primary key,
  pkgpart int not null,
  optionname varchar(80) not null,
  optionvalue text NULL
);
CREATE INDEX part_pkg_option1 ON part_pkg_option ( pkgpart );
CREATE INDEX part_pkg_option2 ON part_pkg_option ( optionname );

dbdef-create username
create-history-tables username cust_pay_refund cust_pay_void part_pkg_option
dbdef-create username

