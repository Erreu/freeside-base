#!/usr/bin/perl -Tw

use strict;
use FS::UID qw(adminsuidsetup);
use FS::Record qw(qsearch qsearchs);
use FS::part_export;
use FS::svc_acct;
use FS::cust_svc;

my $user = shift or die &usage;
adminsuidsetup $user;

my $export_x = shift or die &usage;
my @part_export;
if ( $export_x =~ /^(\d+)$/ ) {
  @part_export = qsearchs('part_export', { exportnum=>$1 } )
    or die "exportnum $export_x not found\n";
} else {
  @part_export = qsearch('part_export', { exporttype=>$export_x } )
    or die "no exports of type $export_x found\n";
}

my $svc_something = shift or die &usage;
my $svc_x;
if ( $svc_something =~ /^(\d+)$/ ) {
  my $cust_svc = qsearchs('cust_svc', { svcnum=>$1 } )
    or die "svcnum $svc_something not found\n";
  $svc_x = $cust_svc->svc_x;
} else {
  $svc_x = qsearchs('svc_acct', { username=>$svc_something } )
    or die "username $svc_something not found\n";
}

foreach my $part_export ( @part_export ) {
  my $error = $part_export->export_insert($svc_x);
  die $error if $error;
}


sub usage {
  die "Usage:\n\n  freeside-reexport user exportnum|exporttype svcnum|username\n";
}

=head1 NAME

freeside-reexport - Command line tool to re-trigger export jobs for existing services

=head1 SYNOPSIS

  freeside-reexport user exportnum|exporttype svcnum|username

=head1 DESCRIPTION

  Re-queues the export job for the specified exportnum or exporttype(s) and
  specified service (selected by svcnum or username).

=head1 SEE ALSO

L<freeside-sqlradius-reset>, L<FS::part_export>

=cut

